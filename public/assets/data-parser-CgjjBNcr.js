class h{constructor(){this.rawData=null,this.processedData=null,this.historyData=null}parseCSV(t){const a=t.trim().split(`
`),e=this.parseCSVLine(a[0]),n=[];console.log("CSV Headers found:",e),console.log("Total CSV lines to process:",a.length-1);for(let s=1;s<a.length;s++){const r=this.parseCSVLine(a[s]);if(r.length===e.length){const o={};e.forEach((l,i)=>{o[l]=r[i]}),n.push(this.processCard(o))}else console.warn(`Line ${s+1} has ${r.length} values but expected ${e.length} - skipping`)}return console.log(`Successfully parsed ${n.length} cards from CSV`),this.rawData=n,n}parseCSVLine(t){const a=[];let e="",n=!1;for(let s=0;s<t.length;s++){const r=t[s];r==='"'?n&&t[s+1]==='"'?(e+='"',s++):n=!n:r===","&&!n?(a.push(e.trim()),e=""):e+=r}return a.push(e.trim()),a}processCard(t){this.rawData&&this.rawData.length<3&&console.log("Card structure debug:",t);let a={};try{t.fields&&(a=JSON.parse(t.fields))}catch(r){console.warn("Failed to parse fields JSON:",r)}const e=t.first_study_date?new Date(t.first_study_date):null,n=t.last_review_date?new Date(t.last_review_date):null;let s=t.anki_level||t.ankiLevel||t.level||t.Level;return(!s||s===void 0||s===null||s==="")&&(console.warn("Missing anki_level for card:",t.note_id,"Available fields:",Object.keys(t)),s="Unknown"),{...t,noteId:t.note_id,ankiLevel:s,deckName:t.deck_name,firstStudyDate:e,lastReviewDate:n,finnish:t.finnish||"",translation:t.translation||"",fields:a,daysSinceFirstStudy:e?Math.floor((new Date-e)/(1e3*60*60*24)):null,daysSinceLastReview:n?Math.floor((new Date-n)/(1e3*60*60*24)):null,deckHierarchy:t.deck_name?t.deck_name.split("::"):[],isOverdue:this.isCardOverdue(t.anki_level,n),studyStreak:this.calculateStudyStreak(e,n)}}isCardOverdue(t,a){if(!a)return!1;const e=Math.floor((new Date-a)/(1e3*60*60*24));switch(t){case"New":return!1;case"Learning":return e>1;case"Young":return e>7;case"Mature":return e>21;case"Relearning":return e>1;default:return!1}}calculateStudyStreak(t,a){return!t||!a?0:Math.floor((a-t)/(1e3*60*60*24))}parseActivityLog(t){var e,n;console.log("parseActivityLog called with:",Object.keys(t||{}).length,"days");const a={};for(const[s,r]of Object.entries(t)){const o=((e=r.reviews)==null?void 0:e.length)||0,l=((n=r.new_studies)==null?void 0:n.length)||0,i=o+l;a[s]={date:new Date(s),reviews:r.reviews||[],newStudies:r.new_studies||[],totalActivity:i},i>0&&console.log(`Activity for ${s}: ${o} reviews + ${l} new studies = ${i} total`)}return console.log("Processed activity data:",Object.keys(a).length,"days"),this.historyData=a,a}getLevelDistribution(t=this.rawData){if(!t)return{};const a={};return t.forEach(e=>{let n=e.ankiLevel||e.anki_level||e.level||e.Level;(!n||n===void 0||n===null)&&(console.warn("Card missing level field:",e),n="Unknown"),a[n]=(a[n]||0)+1}),console.log("Level distribution calculated:",a),a}getDeckPerformance(t=this.rawData){if(!t)return[];const a={};return t.forEach(e=>{const n=e.deckName||e.deck_name;a[n]||(a[n]={name:n,total:0,levels:{}}),a[n].total++;let s=e.ankiLevel||e.anki_level||e.level||e.Level;(!s||s===void 0||s===null)&&(s="Unknown"),a[n].levels[s]=(a[n].levels[s]||0)+1}),Object.values(a).sort((e,n)=>n.total-e.total)}getTimelineData(t="month",a="en-US"){if(!this.historyData)return{labels:[],datasets:[]};const e=new Date,n={},s=this.generateDateRange(t,e);return s.forEach(o=>{const l=o.toISOString().split("T")[0],i=this.historyData[l];n[l]={date:o,reviews:(i==null?void 0:i.reviews.length)||0,newCards:(i==null?void 0:i.newStudies.length)||0,matured:0}}),{labels:s.map(o=>this.formatDateForTimeline(o,t,a)),datasets:[{label:"Reviews",data:s.map(o=>{const l=o.toISOString().split("T")[0];return n[l].reviews}),borderColor:"rgb(75, 192, 192)",backgroundColor:"rgba(75, 192, 192, 0.2)",tension:.1},{label:"New Cards",data:s.map(o=>{const l=o.toISOString().split("T")[0];return n[l].newCards}),borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.2)",tension:.1}]}}generateDateRange(t,a){const e=[],n=new Date(a);let s,r;switch(t){case"week":s=new Date(n.getTime()-7*24*60*60*1e3),r=24*60*60*1e3;break;case"month":s=new Date(n.getFullYear(),n.getMonth()-1,n.getDate()),r=24*60*60*1e3;break;case"year":s=new Date(n.getFullYear()-1,n.getMonth(),n.getDate()),r=7*24*60*60*1e3;break;default:s=new Date(n.getTime()-30*24*60*60*1e3),r=24*60*60*1e3}for(let o=new Date(s);o<=n;o=new Date(o.getTime()+r))e.push(new Date(o));return e}formatDateForTimeline(t,a,e="en-US"){switch(a){case"week":return t.toLocaleDateString(e,{weekday:"short",month:"short",day:"numeric"});case"month":return t.toLocaleDateString(e,{month:"short",day:"numeric"});case"year":return t.toLocaleDateString(e,{month:"short",year:"numeric"});default:return t.toLocaleDateString(e,{month:"short",day:"numeric"})}}getHeatmapData(t=new Date().getFullYear()){if(console.log("getHeatmapData called for year:",t),console.log("historyData available:",!!this.historyData),console.log("historyData keys:",Object.keys(this.historyData||{})),!this.historyData)return console.log("No historyData available for heatmap"),[];const a=[],e=new Date(t,0,1),n=new Date(t,11,31);let s=0;for(let r=new Date(e);r<=n;r.setDate(r.getDate()+1)){const o=r.toISOString().split("T")[0],l=this.historyData[o],i=(l==null?void 0:l.totalActivity)||0;i>0&&(s++,console.log(`Found activity for ${o}: ${i}`)),a.push({date:new Date(r),dateStr:o,activity:i,intensity:this.getIntensityLevel(i)})}return console.log(`Generated heatmap data: ${a.length} days, ${s} with activity`),a}getIntensityLevel(t){return t===0?0:t<=5?1:t<=10?2:t<=20?3:t<=30?4:5}filterCards(t=this.rawData,a={}){return t?t.filter(e=>{if(a.selectedDecks&&a.selectedDecks.length>0){const n=e.deckName||e.deck_name;if(!a.selectedDecks.includes(n))return!1}if(a.selectedLevels&&a.selectedLevels.length>0){let n=e.ankiLevel||e.anki_level||e.level||e.Level;if((!n||n===void 0||n===null)&&(n="Unknown"),!a.selectedLevels.includes(n))return!1}if(a.searchQuery&&a.searchQuery.trim()){const n=a.searchQuery.toLowerCase(),s=(e.finnish||"").toLowerCase(),r=(e.translation||"").toLowerCase();if(!s.includes(n)&&!r.includes(n))return!1}if(a.dateRange&&(a.dateRange.start||a.dateRange.end)){const n=e.lastReviewDate||e.firstStudyDate;if(!n||a.dateRange.start&&n<new Date(a.dateRange.start)||a.dateRange.end&&n>new Date(a.dateRange.end))return!1}if(a.statFilter)switch(a.statFilter.type){case"newWordsToday":return this.isCardNewToday(e);case"newWordsThisWeek":return this.isCardNewThisWeek(e);case"studiedToday":return this.isCardStudiedToday(e);case"totalCards":return!0;default:return!0}return!0}):[]}isCardNewToday(t){if(!this.historyData)return!1;const a=new Date().toISOString().split("T")[0],e=this.historyData[a];if(!e||!e.newStudies)return!1;const n=t.noteId||t.note_id;return e.newStudies.some(s=>(s.note_id||s.noteId)===n)}isCardNewThisWeek(t){if(!this.historyData)return!1;const a=new Date,e=new Date(a),n=e.getDay(),s=e.getDate()-n+(n===0?-6:1);e.setDate(s),e.setHours(0,0,0,0);const r=t.noteId||t.note_id;for(let o=new Date(e);o<=a;o.setDate(o.getDate()+1)){const l=o.toISOString().split("T")[0],i=this.historyData[l];if(i&&i.newStudies&&i.newStudies.some(d=>(d.note_id||d.noteId)===r))return!0}return!1}isCardStudiedToday(t){const a=new Date().toDateString(),e=t.lastReviewDate;return e&&e.toDateString()===a}getUniqueDecks(t=this.rawData){if(!t)return[];const a=new Set;return t.forEach(e=>{const n=e.deckName||e.deck_name;n&&a.add(n)}),Array.from(a).sort()}getUniqueLevels(t=this.rawData){if(!t)return[];const a=new Set;return t.forEach(e=>{const n=e.ankiLevel||e.anki_level;n&&a.add(n)}),Array.from(a).sort()}getNewWordsStats(){var i;if(!this.historyData)return{newWordsToday:0,newWordsThisWeek:0};const t=new Date,a=t.toISOString().split("T")[0],e=new Date(t),n=e.getDay(),s=e.getDate()-n+(n===0?-6:1);e.setDate(s),e.setHours(0,0,0,0);const r=this.historyData[a],o=((i=r==null?void 0:r.newStudies)==null?void 0:i.length)||0;let l=0;for(let u=new Date(e);u<=t;u.setDate(u.getDate()+1)){const d=u.toISOString().split("T")[0],c=this.historyData[d];c!=null&&c.newStudies&&(l+=c.newStudies.length)}return{newWordsToday:o,newWordsThisWeek:l}}getSummaryStats(t=this.rawData){if(!t||t.length===0)return{totalCards:0,studiedToday:0,averageDaily:0,longestStreak:0,currentStreak:0,newWordsToday:0,newWordsThisWeek:0};const a=new Date().toDateString(),e=t.filter(r=>{const o=r.lastReviewDate;return o&&o.toDateString()===a}).length;let n=0;if(this.historyData){const r=Object.keys(this.historyData).length,o=Object.values(this.historyData).reduce((l,i)=>l+i.totalActivity,0);n=r>0?Math.round(o/r):0}const s=this.getNewWordsStats();return{totalCards:t.length,studiedToday:e,averageDaily:n,longestStreak:0,currentStreak:0,...s}}}typeof module<"u"&&module.exports&&(module.exports={DataParser:h});export{h as DataParser};
