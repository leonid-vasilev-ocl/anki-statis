class h{constructor(){this.rawData=null,this.processedData=null,this.historyData=null}toLocalDateString(e){return e.getFullYear()+"-"+String(e.getMonth()+1).padStart(2,"0")+"-"+String(e.getDate()).padStart(2,"0")}parseCSV(e){const n=e.trim().split(`
`),t=this.parseCSVLine(n[0]),a=[];console.log("CSV Headers found:",t),console.log("Total CSV lines to process:",n.length-1);for(let s=1;s<n.length;s++){const o=this.parseCSVLine(n[s]);if(o.length===t.length){const r={};t.forEach((l,i)=>{r[l]=o[i]}),a.push(this.processCard(r))}else console.warn(`Line ${s+1} has ${o.length} values but expected ${t.length} - skipping`)}return console.log(`Successfully parsed ${a.length} cards from CSV`),this.rawData=a,a}parseCSVLine(e){const n=[];let t="",a=!1;for(let s=0;s<e.length;s++){const o=e[s];o==='"'?a&&e[s+1]==='"'?(t+='"',s++):a=!a:o===","&&!a?(n.push(t.trim()),t=""):t+=o}return n.push(t.trim()),n}processCard(e){this.rawData&&this.rawData.length<3&&console.log("Card structure debug:",e);let n={};try{e.fields&&(n=JSON.parse(e.fields))}catch(o){console.warn("Failed to parse fields JSON:",o)}const t=e.first_study_date?new Date(e.first_study_date):null,a=e.last_review_date?new Date(e.last_review_date):null;let s=e.anki_level||e.ankiLevel||e.level||e.Level;return(!s||s===void 0||s===null||s==="")&&(console.warn("Missing anki_level for card:",e.note_id,"Available fields:",Object.keys(e)),s="Unknown"),{...e,noteId:e.note_id,ankiLevel:s,deckName:e.deck_name,firstStudyDate:t,lastReviewDate:a,finnish:e.finnish||"",translation:e.translation||"",fields:n,daysSinceFirstStudy:t?Math.floor((new Date-t)/(1e3*60*60*24)):null,daysSinceLastReview:a?Math.floor((new Date-a)/(1e3*60*60*24)):null,deckHierarchy:e.deck_name?e.deck_name.split("::"):[],isOverdue:this.isCardOverdue(e.anki_level,a),studyStreak:this.calculateStudyStreak(t,a)}}isCardOverdue(e,n){if(!n)return!1;const t=Math.floor((new Date-n)/(1e3*60*60*24));switch(e){case"New":return!1;case"Learning":return t>1;case"Young":return t>7;case"Mature":return t>21;case"Relearning":return t>1;default:return!1}}calculateStudyStreak(e,n){return!e||!n?0:Math.floor((n-e)/(1e3*60*60*24))}parseActivityLog(e){var t,a;console.log("parseActivityLog called with:",Object.keys(e||{}).length,"days");const n={};for(const[s,o]of Object.entries(e)){const r=((t=o.reviews)==null?void 0:t.length)||0,l=((a=o.new_studies)==null?void 0:a.length)||0,i=r+l;n[s]={date:new Date(s),reviews:o.reviews||[],newStudies:o.new_studies||[],totalActivity:i},i>0&&console.log(`Activity for ${s}: ${r} reviews + ${l} new studies = ${i} total`)}return console.log("Processed activity data:",Object.keys(n).length,"days"),this.historyData=n,n}getLevelDistribution(e=this.rawData){if(!e)return{};const n={};return e.forEach(t=>{let a=t.ankiLevel||t.anki_level||t.level||t.Level;(!a||a===void 0||a===null)&&(console.warn("Card missing level field:",t),a="Unknown"),n[a]=(n[a]||0)+1}),console.log("Level distribution calculated:",n),n}getDeckPerformance(e=this.rawData){if(!e)return[];const n={};return e.forEach(t=>{const a=t.deckName||t.deck_name;n[a]||(n[a]={name:a,total:0,levels:{}}),n[a].total++;let s=t.ankiLevel||t.anki_level||t.level||t.Level;(!s||s===void 0||s===null)&&(s="Unknown"),n[a].levels[s]=(n[a].levels[s]||0)+1}),Object.values(n).sort((t,a)=>a.total-t.total)}getTimelineData(e="month",n="en-US"){if(!this.historyData)return{labels:[],datasets:[]};const t=new Date,a={},s=this.generateDateRange(e,t);return s.forEach(r=>{const l=this.toLocalDateString(r),i=this.historyData[l];a[l]={date:r,reviews:(i==null?void 0:i.reviews.length)||0,newCards:(i==null?void 0:i.newStudies.length)||0,matured:0}}),{labels:s.map(r=>this.formatDateForTimeline(r,e,n)),datasets:[{label:"Reviews",data:s.map(r=>{const l=this.toLocalDateString(r);return a[l].reviews}),borderColor:"rgb(75, 192, 192)",backgroundColor:"rgba(75, 192, 192, 0.2)",tension:.1},{label:"New Cards",data:s.map(r=>{const l=this.toLocalDateString(r);return a[l].newCards}),borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.2)",tension:.1}]}}generateDateRange(e,n){const t=[],a=new Date(n);let s,o;switch(e){case"week":s=new Date(a.getTime()-7*24*60*60*1e3),o=24*60*60*1e3;break;case"month":s=new Date(a.getFullYear(),a.getMonth()-1,a.getDate()),o=24*60*60*1e3;break;case"year":s=new Date(a.getFullYear()-1,a.getMonth(),a.getDate()),o=7*24*60*60*1e3;break;default:s=new Date(a.getTime()-30*24*60*60*1e3),o=24*60*60*1e3}for(let r=new Date(s);r<=a;r=new Date(r.getTime()+o))t.push(new Date(r));return t}formatDateForTimeline(e,n,t="en-US"){switch(n){case"week":return e.toLocaleDateString(t,{weekday:"short",month:"short",day:"numeric"});case"month":return e.toLocaleDateString(t,{month:"short",day:"numeric"});case"year":return e.toLocaleDateString(t,{month:"short",year:"numeric"});default:return e.toLocaleDateString(t,{month:"short",day:"numeric"})}}getHeatmapData(e=new Date().getFullYear()){if(console.log("getHeatmapData called for year:",e),console.log("historyData available:",!!this.historyData),console.log("historyData keys:",Object.keys(this.historyData||{})),!this.historyData)return console.log("No historyData available for heatmap"),[];const n=[],t=new Date(e,0,1),a=new Date(e,11,31);let s=0;for(let o=new Date(t);o<=a;o.setDate(o.getDate()+1)){const r=this.toLocalDateString(o),l=this.historyData[r],i=(l==null?void 0:l.totalActivity)||0;i>0&&(s++,console.log(`Found activity for ${r}: ${i}`)),n.push({date:new Date(o),dateStr:r,activity:i,intensity:this.getIntensityLevel(i)})}return console.log(`Generated heatmap data: ${n.length} days, ${s} with activity`),n}getIntensityLevel(e){return e===0?0:e<=5?1:e<=10?2:e<=20?3:e<=30?4:5}filterCards(e=this.rawData,n={}){return e?e.filter(t=>{if(n.selectedDecks&&n.selectedDecks.length>0){const a=t.deckName||t.deck_name;if(!n.selectedDecks.includes(a))return!1}if(n.selectedLevels&&n.selectedLevels.length>0){let a=t.ankiLevel||t.anki_level||t.level||t.Level;if((!a||a===void 0||a===null)&&(a="Unknown"),!n.selectedLevels.includes(a))return!1}if(n.searchQuery&&n.searchQuery.trim()){const a=n.searchQuery.toLowerCase(),s=(t.finnish||"").toLowerCase(),o=(t.translation||"").toLowerCase();if(!s.includes(a)&&!o.includes(a))return!1}if(n.dateRange&&(n.dateRange.start||n.dateRange.end)){const a=t.lastReviewDate||t.firstStudyDate;if(!a||n.dateRange.start&&a<new Date(n.dateRange.start)||n.dateRange.end&&a>new Date(n.dateRange.end))return!1}if(n.statFilter)switch(n.statFilter.type){case"newWordsToday":return this.isCardNewToday(t);case"newWordsThisWeek":return this.isCardNewThisWeek(t);case"studiedToday":return this.isCardStudiedToday(t);case"totalCards":return!0;default:return!0}return!0}):[]}isCardNewToday(e){if(!this.historyData)return!1;const n=this.toLocalDateString(new Date),t=this.historyData[n];if(!t||!t.newStudies)return!1;const a=e.noteId||e.note_id;return t.newStudies.some(s=>(s.note_id||s.noteId)===a)}isCardNewThisWeek(e){if(!this.historyData)return!1;const n=new Date,t=new Date(n),a=t.getDay(),s=t.getDate()-a+(a===0?-6:1);t.setDate(s),t.setHours(0,0,0,0);const o=e.noteId||e.note_id;for(let r=new Date(t);r<=n;r.setDate(r.getDate()+1)){const l=this.toLocalDateString(r),i=this.historyData[l];if(i&&i.newStudies&&i.newStudies.some(d=>(d.note_id||d.noteId)===o))return!0}return!1}isCardStudiedToday(e){const n=new Date().toDateString(),t=e.lastReviewDate;return t&&t.toDateString()===n}getUniqueDecks(e=this.rawData){if(!e)return[];const n=new Set;return e.forEach(t=>{const a=t.deckName||t.deck_name;a&&n.add(a)}),Array.from(n).sort()}getUniqueLevels(e=this.rawData){if(!e)return[];const n=new Set;return e.forEach(t=>{const a=t.ankiLevel||t.anki_level;a&&n.add(a)}),Array.from(n).sort()}getNewWordsStats(){var i;if(!this.historyData)return{newWordsToday:0,newWordsThisWeek:0};const e=new Date,n=this.toLocalDateString(e),t=new Date(e),a=t.getDay(),s=t.getDate()-a+(a===0?-6:1);t.setDate(s),t.setHours(0,0,0,0);const o=this.historyData[n],r=((i=o==null?void 0:o.newStudies)==null?void 0:i.length)||0;let l=0;for(let u=new Date(t);u<=e;u.setDate(u.getDate()+1)){const d=this.toLocalDateString(u),c=this.historyData[d];c!=null&&c.newStudies&&(l+=c.newStudies.length)}return{newWordsToday:r,newWordsThisWeek:l}}getSummaryStats(e=this.rawData){if(!e||e.length===0)return{totalCards:0,studiedToday:0,averageDaily:0,longestStreak:0,currentStreak:0,newWordsToday:0,newWordsThisWeek:0};const n=new Date().toDateString(),t=e.filter(o=>{const r=o.lastReviewDate;return r&&r.toDateString()===n}).length;let a=0;if(this.historyData){const o=Object.keys(this.historyData).length,r=Object.values(this.historyData).reduce((l,i)=>l+i.totalActivity,0);a=o>0?Math.round(r/o):0}const s=this.getNewWordsStats();return{totalCards:e.length,studiedToday:t,averageDaily:a,longestStreak:0,currentStreak:0,...s}}}typeof module<"u"&&module.exports&&(module.exports={DataParser:h});export{h as DataParser};
